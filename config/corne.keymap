/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    combos {
        compatible = "zmk,combos";

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <21 22>;
            layers = <0>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
            layers = <0>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <19 20>;
            layers = <0>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <13 14>;
        };

        one_hand_lyr {
            bindings = <&tog 3>;
            key-positions = <4 5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &kp Q  &kp W  &kp E           &kp R             &kp T          &kp Y            &kp U        &kp I            &kp O       &kp P
  &kp A  &kp S  &mt LEFT_ALT D  &mt LEFT_SHIFT F  &mt LCTRL G    &mt RCTRL H      &mt LSHFT J  &mt RIGHT_ALT K  &kp L       &kp SEMICOLON
  &kp Z  &kp X  &kp C           &kp V             &kp B          &kp N            &kp M        &kp COMMA        &kp PERIOD  &kp SLASH
                &kp ESCAPE      &mo 2             &kp SPACE      &lt 1 BACKSPACE  &mo 2        &kp DELETE
            >;
        };

        nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5    &kp NUMBER_6    &kp N7        &kp N8     &kp N9         &kp N0
  &trans        &trans        &trans        &trans        &trans    &kp HOME        &kp UP_ARROW  &kp END    &kp PAGE_UP    &trans
  &trans        &trans        &trans        &trans        &trans    &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &kp PAGE_DOWN  &trans
                              &trans        &trans        &trans    &trans          &trans        &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &none     &kp EXCL  &kp AT         &kp HASH  &kp DLLR    &kp PRCNT  &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR
  &kp RPAR  &none     &none          &trans    &trans      &trans     &trans     &trans    &kp MINUS        &kp EQUAL
  &kp LBKT  &kp RBKT  &kp SEMICOLON  &none     &none       &trans     &trans     &trans    &trans           &trans
                      &kp UNDER      &kp PLUS  &kp LBRC    &kp RBRC   &kp PIPE   &none
            >;
        };

        one_hand_left {
            bindings = <
  &trans  &kp P   &kp O   &kp I     &kp U     &kp Y      &trans             &trans            &trans  &trans
  &trans  &trans  &trans  &kp PLUS  &kp L     &kp K      &kp J              &kp H             &trans  &trans
  &trans  &trans  &trans  &trans    &trans    &kp MINUS  &kp RIGHT_BRACKET  &kp LEFT_BRACKET  &kp M   &kp N
                  &trans  &trans    &trans    &trans     &trans             &trans
            >;
        };
    };
};
