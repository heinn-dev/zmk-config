/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    hold-while-undecided;
};

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    combos {
        compatible = "zmk,combos";

        enter {
            bindings = <&kp ENTER>;
            key-positions = <16 17>;
        };

        to_game {
            bindings = <&tog 1>;
            key-positions = <25 29>;
            layers = <0 1>;
        };

        enter_L {
            bindings = <&kp ENTER>;
            key-positions = <12 13>;
        };

        backspace_l {
            bindings = <&kp BACKSPACE>;
            key-positions = <2 3>;
        };

        l_esc {
            bindings = <&kp ESCAPE>;
            key-positions = <2 1>;
        };

        l_menu {
            bindings = <&kp K_CONTEXT_MENU>;
            key-positions = <4 14>;
            layers = <0>;
        };

        r_ins {
            bindings = <&kp INSERT>;
            key-positions = <5 15>;
        };

        num_plus {
            bindings = <&kp PLUS>;
            key-positions = <14 4>;
            layers = <6>;
        };

        num_div {
            bindings = <&kp SLASH>;
            key-positions = <3 13>;
            layers = <6>;
        };

        l_delete {
            bindings = <&kp DELETE>;
            key-positions = <23 22>;
        };

        lnav_home {
            bindings = <&kp HOME>;
            key-positions = <11 1>;
            layers = <7>;
        };

        lnav_end {
            bindings = <&kp END>;
            key-positions = <13 3>;
            layers = <7>;
        };

        l_caps {
            bindings = <&kp CAPS>;
            key-positions = <10 11>;
            layers = <0>;
            timeout-ms = <40>;
        };

        l_capsw {
            bindings = <&caps_word>;
            key-positions = <20 21>;
            timeout-ms = <40>;
        };

        win_s {
            bindings = <&kp LG(S)>;
            key-positions = <21 11>;
            layers = <0>;
        };

        alt_d {
            bindings = <&kp LA(D)>;
            key-positions = <12 22>;
            layers = <0>;
        };
    };

    behaviors {
        td_scolon: td_scolon {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SCOLON";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp SEMICOLON>;
        };

        qt_cln: qt_cln {
            compatible = "zmk,behavior-mod-morph";
            label = "QT_CLN";
            bindings = <&kp SQT>, <&kp SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_RCTL|MOD_LCTL)>;
        };

        bkslh_pipe: bkslh_pipe {
            compatible = "zmk,behavior-mod-morph";
            label = "BKSLH_PIPE";
            bindings = <&kp SLASH>, <&kp BACKSLASH>;

            #binding-cells = <0>;
            mods = <(MOD_RCTL|MOD_LCTL)>;
        };

        alt_holdtap: alt_holdtap {
            compatible = "zmk,behavior-hold-tap";
            label = "ALT_HOLDTAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        nbmr_wrd: nbmr_wrd {
            compatible = "zmk,behavior-caps-word";
            label = "NBMR_WRD";
            #binding-cells = <0>;
            continue-list = <NUMBER_0 NUMBER_9 NUMBER_8 NUMBER_7 NUMBER_4 NUMBER_5 NUMBER_6 NUMBER_1 NUMBER_2 NUMBER_3 MINUS PLUS SLASH ASTERISK DOT>;
        };

        nmbr_tap: nmbr_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "NMBR_TAP";
            bindings = <&mo>, <&nmbr_toggle>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        tap_hold_key: tap_hold_key {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_HOLD_KEY";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    macros {
        nmbr_toggle: nmbr_toggle {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap_time 1000>,
                <&tog 6>,
                <&macro_release>,
                <&tog 6>;

            label = "NMBR_TOGGLE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &kp Q    &kp W                    &kp E                    &kp R             &kp T          &kp Y            &kp U         &kp I                     &kp O                     &kp P
  &lt 7 A  &alt_holdtap LEFT_WIN S  &alt_holdtap LEFT_ALT D  &mt LEFT_SHIFT F  &mt LCTRL G    &mt RCTRL H      &mt LSHFT J   &alt_holdtap RIGHT_ALT K  &alt_holdtap RIGHT_WIN L  &qt_cln
  &lt 6 Z  &kp X                    &kp C                    &kp V             &kp B          &kp N            &kp M         &kp COMMA                 &kp PERIOD                &bkslh_pipe
                                    &lt 8 C_PP               &lt 4 TAB         &kp SPACE      &lt 2 BACKSPACE  &lt 3 DELETE  &lt 5 PRINTSCREEN
            >;
        };

        game {
            bindings = <
  &kp ESC         &kp Q  &kp W  &kp E    &kp R        &kp T   &kp Y   &kp U    &kp I  &kp O
  &kp LEFT_SHIFT  &kp A  &kp S  &kp D    &kp F        &kp G   &kp H   &kp J    &kp K  &kp L
  &kp LCTRL       &kp Z  &kp X  &kp C    &kp B        &kp B   &kp N   &kp M    &kp P  &trans
                         &mo 0  &kp TAB  &kp SPACE    &trans  &trans  &kp DEL
            >;
        };

        NAV2 {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &kp PAGE_UP  &kp HOME  &kp UP    &kp END    &trans
  &trans  &trans  &trans  &trans  &trans    &kp PG_DN    &kp LEFT  &kp DOWN  &kp RIGHT  &trans
  &trans  &trans  &trans  &trans  &trans    &trans       &trans    &trans    &trans     &trans
                  &trans  &trans  &trans    &trans       &trans    &trans
            >;
        };

        SYM2 {
            bindings = <
  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH        &kp DOLLAR  &kp PERCENT             &kp CARET              &kp AMPERSAND  &kp ASTERISK     &kp MINUS       &kp PLUS
  &kp GRAVE        &kp TILDE    &kp LEFT_BRACE  &kp LBKT    &kp LEFT_PARENTHESIS    &kp RIGHT_PARENTHESIS  &kp RBKT       &kp RIGHT_BRACE  &kp UNDERSCORE  &kp EQUAL
  &kp N1           &kp N2       &kp N3          &kp N4      &kp N5                  &kp N6                 &kp N7         &kp N8           &kp N9          &kp N0
                                &trans          &trans      &trans                  &trans                 &trans         &trans
            >;
        };

        FLIP {
            bindings = <
  &kp P       &kp O    &kp I           &kp U             &kp Y          &kp C_PLAY_PAUSE   &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &msc SCRL_UP
  &td_scolon  &kp L    &mt LEFT_ALT K  &mt LEFT_SHIFT J  &mt LCTRL H    &kp C_VOLUME_UP    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN
  &kp FSLH    &kp DOT  &kp COMMA       &kp M             &kp N          &kp C_VOLUME_DOWN  &mkp MB4        &mkp MCLK       &mkp MB5         &trans
                       &trans          &trans            &trans         &trans             &trans          &trans
            >;
        };

        FN+BT {
            bindings = <
  &kp F1         &kp F2         &kp F3  &kp F4  &kp F5            &kp F6   &kp F7  &kp F8  &kp F9  &kp F10
  &bt BT_SEL 0   &bt BT_SEL 1   &trans  &trans  &kp F11           &kp F12  &trans  &trans  &trans  &trans
  &bt BT_DISC 0  &bt BT_DISC 2  &trans  &trans  &bt BT_CLR_ALL    &trans   &trans  &trans  &trans  &trans
                                &trans  &trans  &trans            &trans   &trans  &trans
            >;
        };

        NUM {
            bindings = <
  &kp MINUS  &kp ASTERISK       &kp N7         &kp N8      &kp N9    &trans  &trans  &trans  &trans  &trans
  &kp PLUS   &kp RIGHT_BRACKET  &kp N4         &kp N5      &kp N6    &trans  &trans  &trans  &trans  &trans
  &trans     &kp LEFT_BRACKET   &kp N1         &kp N2      &kp N3    &trans  &trans  &trans  &trans  &trans
                                &kp BACKSPACE  &kp PERIOD  &kp N0    &trans  &trans  &trans
            >;

            label = "SL";
        };

        NAV_L {
            bindings = <
  &trans  &kp Q     &kp UP    &kp E      &kp RIGHT_BRACKET    &trans  &trans  &trans  &trans  &trans
  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &kp LEFT_BRACKET     &trans  &trans  &trans  &trans  &trans
  &trans  &trans    &trans    &trans     &trans               &trans  &trans  &trans  &trans  &trans
                    &trans    &trans     &trans               &trans  &trans  &trans
            >;
        };

        fuckass {
            bindings = <
  &trans  &trans          &trans             &trans           &trans        &trans  &trans  &trans  &trans  &trans
  &trans  &kp LG(S)       &kp LA(D)          &kp LS(F)        &kp LC(G)     &trans  &trans  &trans  &trans  &trans
  &trans  &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT    &trans  &trans  &trans  &trans  &trans
                          &trans             &trans           &trans        &trans  &trans  &trans
            >;
        };
    };
};
